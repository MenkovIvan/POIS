#lang racket
(display "Вариант 1\n")
(display "Вычисление площади кольца.\n")
(display "Введите данные в одной строке:\n")
(display "Радиус кольца(см\n")
(display "Радиус отверстия(см)\n")

(let func ([ring (read)] [hole (read)])
  (if (> hole ring)
    (display "Ошибка! Радиус отверстия не может быть больше радиуса кольца.\n\n")
    (display (format "Площадь кольца: ~a см. кв\n\n" (- (* 3.14 (* ring ring)) (* 3.14 (* hole hole)))))))


(display "Вариант 4\n")
(display "Вычисление сопротивления электрической цепи.\n")
(display "Введите данные в одной строке:\n")
(display "Величина первого сопротивления(Ом)\n")
(display "Величина второго сопротивления(Ом)\n")
(display "Тип соединения (1 - последовательное, 2 - паралельное)\n")

(let func ([R1 (read)][R2 (read)][type (read)])
  (cond ((= type 1) (display (format "Сопротивление цепи: ~a Ом\n\n" (+ R1 R2))))
        ((= type 2) (display (format "Сопротивление цепи: ~a Ом\n\n" (/ 1 (+ (/ 1 R1) (/ 1 R2))))))))


(display "Вариант 5\n")
(display "Решение квадратного уравнения.\n")
(display "Введите в одной строке значения коэффициентов:\n")

(let func ([a (read)][b (read)][c (read)])
(if (= a 0)
    (display "Ошибка! Уравнение не является квадратным.\n\n")
    (cond
      ((< (- (sqr b) (* 4 a c)) 0)
       (display "Так как дискриминант меньше нуля, то уравнение не имеет действительных корней.\n\n"))
      ((= (- (sqr b) (* 4 a c)) 0)
       (display (format "x = ~a\n\n" (/ (- b) (* 2 a)))))
      ((> (- (sqr b) (* 4 a c)) 0)
       (display (format "x1 = ~a\nx2 = ~a\n\n" (/ (+ (- b) (sqrt (- (sqr b) (* 4 a c)))) (* 2 a)) (/ (- (- b) (sqrt (- (sqr b) (* 4 a c)))) (* 2 a))))
        ))))
